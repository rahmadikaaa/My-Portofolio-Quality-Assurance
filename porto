# Portofolio Quality Assurance - Rahmadika Tri Putera
> Dokumen ini dibuat sebagai respons terhadap lowongan **MIS QA Staff** di **PT Novell Pharmaceutical Laboratories**. Portofolio ini mendemonstrasikan kemampuan saya dalam membuat skenario pengujian, pemahaman SQL Query, dan analisis diagram sistem.

**Kontak:** [LinkedIn](https://www.linkedin.com/in/rahmadikaaa) | [GitHub](https://github.com/rahmadikaaa) | [rahmadika.putera@gmail.com](mailto:rahmadika.putera@gmail.com)

---

## Ringkasan Profesional
Profesional Quality Assurance yang berorientasi pada detail dengan pengalaman komprehensif dalam pengujian manual dan dasar-dasar automasi. 
Terampil dalam merancang test case, mengeksekusi pengujian fungsional & API, serta melakukan pelacakan bug (bug tracking). 
Mampu memanfaatkan SQL untuk validasi data di sisi backend dan memahami alur kerja SDLC untuk memastikan produk berkualitas tinggi.
Memiliki pengetahuan pada pemanfaatan AI dan automasi untuk meningkatkan efisiensi dan akurasi pengujian.

---

### Daftar Proyek Portofolio
1.  [Proyek 1: Dokumentasi skenario pengujian untuk Positive dan Negative Testing pada modul Customer, Prospek, Quotation, Approval, dan Sales Order di sistem CRM/ERP. ]
2.  [Proyek 2: Validasi Data Pasca-Import Produk dari Sage 300 ke Sistem Odoo.]
3.  [Proyek 3: Analisis Alur "Lupa Password" (Flowchart & Test Scenario)](#proyek-3-analisis-alur-lupa-password-flowchart--test-scenario)

---

## Proyek 1: Dokumentasi Pengujian Positive dan Negative Testing pada modul Customer, Prospek, Quotation, Approval, dan Sales Order.

Proyek ini menunjukkan kemampuan saya dalam membuat skenario pengujian yang terstruktur untuk fitur registrasi pada **Aplikasi Internal Karyawan**.

### A. Tabel Test Case
Tabel berikut berisi contoh test case positif dan negatif.

## Test Case Positif
| ID Tes       | Prioritas | Modul     | Judul Skenario                                | Prasyarat                                                                 | Langkah-langkah                                                                                                                                       | Data Uji                     | Hasil yang Diharapkan                                                                 |
|--------------|-----------|-----------|-----------------------------------------------|---------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------|---------------------------------------------------------------------------------------|
| TC-CUST-01   | High      | Customer  | Membuat Customer baru dengan data minimal      | User 'Sales' sudah login.                                                  | 1. Buka menu Customer & klik 'Create'.<br>2. Isi data customer tanpa NPWP, Sage Code, Email, HP.<br>3. Pilih tipe customer.<br>4. Simpan data.        | User: sales<br>Tipe: Fleet   | Data customer baru berhasil tersimpan di sistem.                                      |
| TC-CUST-02   | Medium    | Customer  | Menambahkan "Unit Owned" pada customer         | Customer sudah ada di sistem.                                              | 1. Buka data customer yang ada.<br>2. Masuk ke tab 'Unit Owned'.<br>3. Tambahkan data unit baru.<br>4. Simpan.                                        | Customer: ALUMINDO            | Data "Unit Owned" berhasil tersimpan di bawah data customer tersebut.                  |
| TC-CUST-03   | Medium    | Customer  | Menambahkan "Contact & Delivery Address"       | Customer sudah ada di sistem.                                              | 1. Buka data customer.<br>2. Klik 'Create Contact'.<br>3. Isi data kontak dan alamat pengiriman.<br>4. Simpan.                                        | Customer: ALUMINDO            | Data kontak dan alamat pengiriman berhasil tersimpan.                                  |
| TC-PROS-01   | High      | Prospek   | Membuat Prospek baru                           | 1. User 'Sales' sudah login.<br>2. Customer & Produk sudah ada.            | 1. Buka menu Prospek & klik 'Create'.<br>2. Pilih customer yang relevan.<br>3. Tambahkan produk ke line prospek.<br>4. Simpan.                        | Produk: MH                    | Data prospek baru berhasil tersimpan.                                                  |
| TC-PROS-02   | Medium    | Prospek   | Verifikasi tombol info stok produk             | Prospek sudah dibuat & memiliki line produk.                               | 1. Buka data prospek.<br>2. Klik tombol "info" di samping line produk.                                                                                | -                             | Muncul jendela pop-up yang menampilkan detail stok on hand produk tersebut.            |

## Test Case Negatif
| **ID Tes**   | **Prioritas** | **Modul**   | **Judul Skenario** | **Prasyarat** | **Langkah-langkah** | **Data Uji** | **Hasil yang Diharapkan** |
| ------------ | ------------- | ----------- | ------------------ | ------------- | ------------------- | ------------ |------------- |
| TC-CUST-04-N | High          | Customer    | Membuat Customer dengan nama kosong | User 'Sales' sudah login. | 1. Buka menu Customer & klik 'Create'.<br>2. Biarkan field 'Nama Customer' kosong.<br>3. Isi field lainnya.<br>4. Simpan data.        | Nama: (kosong)           | Sistem menampilkan pesan error validasi, misalnya, *"Nama Customer wajib diisi."* dan data tidak tersimpan.                                          |
| TC-CUST-05-N | Medium        | Customer    | Menambahkan "Unit Owned" dengan format salah       | Customer sudah ada di sistem.                                                                                      | 1. Buka data customer.<br>2. Masuk ke tab 'Unit Owned'.<br>3. Isi field yang seharusnya angka dengan teks.<br>4. Simpan.              | Tahun Unit: duaribu      | Sistem menampilkan pesan error validasi, misalnya, *"Tahun Unit harus berupa angka."* dan data tidak tersimpan.                                      |
| TC-PROS-04-N | High          | Prospek     | Menyimpan Prospek tanpa menambahkan produk         | 1. User 'Sales' sudah login.<br>2. Customer sudah dipilih.                                                         | 1. Buka menu Prospek & klik 'Create'.<br>2. Pilih customer.<br>3. Jangan tambahkan produk apapun.<br>4. Klik 'Simpan'.                | -                        | Sistem menampilkan pesan error, misalnya, *"Minimal harus ada 1 produk di dalam prospek."* dan data tidak tersimpan.                                 |
| TC-QUO-05-N  | High          | Quotation   | Menginput diskon melebihi wewenang                 | 1. User 'Sales' sudah login.<br>2. Quotation sudah dibuat.                                                         | 1. Buka Quotation.<br>2. Pada line produk, masukkan nilai diskon yang lebih tinggi dari batas wewenang user Sales.<br>3. Coba simpan. | User: sales, Diskon: 50% | Sistem menolak inputan dan menampilkan pesan error, misalnya, *"Diskon melebihi batas wewenang Anda."*                                               |
| TC-QUO-06-N  | High          | Quotation   | Membuat Quotation untuk customer tanpa Price List  | Customer 'X' ada di sistem tetapi tidak memiliki Price List yang terkonfigurasi.                                   | 1. Buat Prospek baru.<br>2. Pilih Customer 'X'.<br>3. Buat Quotation dari Prospek tersebut.                                           | Customer: X              | Sistem menampilkan pesan peringatan yang jelas, misalnya, *"Pricelist tidak ditemukan untuk customer ini."*                                          |
| TC-APP-04-N  | High          | Approval    | User Sales mencoba menyetujui approval-nya sendiri | 1. User 'Sales' sudah login.<br>2. Quotation yang butuh approval sudah dibuat oleh user tersebut.                  | 1. Buka Quotation yang menunggu approval.<br>2. Cari dan coba klik tombol 'Approve'.                                                  | User: sales              | Tombol 'Approve' tidak terlihat atau tidak bisa diklik (*disabled*) untuk user yang mengajukan.                                                      |
| TC-APP-05-N  | Medium        | Approval    | User BM yang tidak berkepentingan mencoba approve  | 1. User 'BM B' sudah login.<br>2. Ada Quotation yang menunggu approval dari 'BM A'.                                | 1. User 'BM B' membuka Quotation tersebut.<br>2. Mencoba klik tombol 'Approve'.                                                       | User: bm_b               | Sistem menampilkan pesan error, misalnya, *"Anda tidak memiliki wewenang untuk approval ini."*                                                       |
| TC-SO-04-N   | High          | Sales Order | Membuat SO dari Quotation yang belum di-approve    | 1. User 'PM' sudah login.<br>2. Ada Quotation dengan status 'Waiting for Approval'.                                | 1. Buka Quotation tersebut.<br>2. Cari tombol 'Create Sales Order'.                                                                   | User: pm                 | Tombol 'Create Sales Order' tidak aktif (*disabled*) atau tidak muncul sama sekali.                                                                  |
| TC-SO-05-N   | High          | Sales Order | Membuat SO dari Quotation dengan bobot < 70        | 1. User 'PM' sudah login.<br>2. Ada Quotation yang statusnya 'Approved' tetapi bobot prospeknya masih di bawah 70. | 1. Buka Quotation tersebut.<br>2. Cari tombol 'Create Sales Order'.                                                                   | Bobot: 50                | Tombol 'Create Sales Order' tidak aktif (*disabled*) dan sistem menampilkan pesan, misalnya, *"Bobot Prospek harus â‰¥ 70 untuk membuat Sales Order."* |


### Proyek 2: Validasi Data Product Pricelist dengan menggunakan SQL Query
Proyek ini mendemonstrasikan kemampuan saya dalam menggunakan SQL Query untuk melakukan validasi data pada modul Product Pricelist.

## Query digunakan untuk:
Memperbarui data pricelist tertentu (misalnya menghapus kategori bisnis dan mengaktifkan flag khusus).
Melakukan pencarian terhadap semua pricelist yang memiliki nama mengandung kata "Sparepart" untuk memastikan data tersimpan dan terfilter dengan benar di database.

### Skenario Validasi
Memperbarui data pricelist tertentu (misalnya menghapus kategori bisnis dan mengaktifkan flag khusus).

  ```update product_pricelist 
  set ktg_business_category_id = null, 
    ktg_is_pricelist_spss = true 
  where id = 123;
   ```

Fungsinya
1. Mengosongkan kolom ktg_business_category_id (set jadi NULL).
2. Mengubah kolom ktg_is_pricelist_spss jadi TRUE.
3. Hanya untuk baris dengan id = 123 di tabel product_pricelist.
4. Mengubah kolom ktg_is_pricelist_spss jadi TRUE.
Artinya: kamu lagi update data pricelist tertentu supaya business category-nya dihapus dan flag is_pricelist_spss diaktifkan.


  ```select name->>'en_US' as name, * 
    from product_pricelist 
  where name->>'en_US' like '%Sparepart%';
  ```

Fungsinya:
1. Mengambil semua data dari tabel product_pricelist.
2. Tapi hanya data yang name (bahasa Inggris en_US) mengandung kata Sparepart.
3. Juga mengubah kolom name (yang berupa JSON) supaya tampil sebagai teks biasa name.

---

### Proyek 3: Analisis Alur Kerja & Hak Akses Pengguna (Studi Kasus: Sistem CRM)
## Link Gambar : https://drive.google.com/file/d/1lBxgUyG-dKvn67-CVGJuSbCVPKOl09aD/view?usp=sharing
## Objektif Proyek:
Menganalisis sebuah flowchart alur kerja manajemen pelanggan untuk mengevaluasi efektivitas, keamanan, dan potensi peningkatannya. Proyek ini mendemonstrasikan kemampuan saya dalam menerjemahkan diagram teknis menjadi analisis proses bisnis dan memberikan rekomendasi strategis dari sudut pandang Quality Assurance.

#Ringkasan Alur Kerja
Flowchart ini menggambarkan sistem Kontrol Akses Berbasis Peran (RBAC) dengan tiga tingkatan hak akses untuk mengelola data pelanggan:

#Branch Manager: Bertindak sebagai pengelola penuh di cabangnya dengan hak akses untuk melihat semua data, serta menambah dan memvalidasi pelanggan baru.
Sales: Berperan sebagai kreator data yang hanya dapat menambah pelanggan baru dan melihat data yang mereka buat sendiri.
Admin Sales: Berfungsi sebagai pemantau (auditor) dengan hak akses read-only untuk melihat semua data pelanggan dari semua Sales, tanpa bisa menambah atau mengubah data.

#Analisis dan Rekomendasi
Sebagai seorang QA, saya menganalisis alur ini tidak hanya dari sisi fungsional, tetapi juga dari sisi ketahanan (robustness) dan kelengkapan proses bisnisnya.

#Kekuatan Alur Kerja:
Pemisahan Tugas yang Jelas: Sistem ini secara efektif memisahkan wewenang antara manajerial (BM), eksekusi (Sales), dan audit (Admin Sales), yang merupakan praktik terbaik untuk integritas data.
Penerapan Prinsip Least Privilege: Setiap peran diberikan hak akses minimum yang diperlukan untuk melakukan tugasnya, yang secara signifikan mengurangi risiko kesalahan atau penyalahgunaan data.
Adanya Kontrol Kualitas: Langkah "Validasi Data" yang ada pada alur BM dan Sales menunjukkan adanya mekanisme bawaan untuk menjaga kualitas data sejak awal.

#Rekomendasi & Skenario Lanjutan untuk Diuji:
Setelah menganalisis "jalur sukses" (happy path) yang digambarkan, saya mengidentifikasi beberapa area untuk peningkatan dan pengujian lebih lanjut:
Alur untuk Edit & Hapus Data: Flowchart saat ini hanya mencakup proses pembuatan data. Perlu didefinisikan alur untuk memperbarui data (misalnya, pelanggan pindah alamat) dan menonaktifkan/menghapus data. Skenario Tes: Apakah Sales bisa mengedit data milik Sales lain? Siapa yang berhak menghapus data?
Mekanisme Transfer Pelanggan: Tidak ada alur yang menjelaskan apa yang terjadi jika seorang Sales resign. Perlu ada fitur bagi Branch Manager untuk mengalihkan kepemilikan pelanggan ke Sales lain untuk memastikan kelangsungan bisnis. Skenario Tes: Bagaimana proses re-assign pelanggan dari Sales A ke Sales B?
Kebutuhan Kolaborasi Tim: Sistem saat ini mengisolasi data per Sales. Bagaimana jika dua Sales perlu berkolaborasi untuk satu pelanggan besar? Perlu dipertimbangkan adanya fitur untuk "berbagi akses" pelanggan secara kasuistik. Skenario Tes: Uji coba fitur 'Share Customer' antara dua akun Sales.
